package ru.neoflex;

import java.util.Random;
import java.util.Scanner;

public class HackerChallenge {
    private static final int SEED = new Random().nextInt(50) + 10;
    private static final int FALSE_A = (SEED * 2 + 13) % 256;
    private static final int FALSE_B = (SEED * 3 + 7) % 256;

    private static final int HIDDEN_A = scrambleNumber(6, 7, 14);
    private static final int HIDDEN_B = scrambleNumber(11, 9, 18);

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("üíª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –•–∞–∫–µ—Ä—Å–∫–∏–π –ß–µ–ª–ª–µ–Ω–¥–∂!");
        System.out.println("üéØ –í–∞—à–∞ —Ü–µ–ª—å: –Ω–∞–π—Ç–∏ –¥–≤–∞ —Å–∫—Ä—ã—Ç—ã—Ö —á–∏—Å–ª–∞.");
        System.out.println("‚ö† –í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:");

        int inputA = scanner.nextInt();
        int inputB = scanner.nextInt();
        scanner.nextLine();

        if (checkNumbers(inputA, inputB)) {
            System.out.println("üöÄ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –≤–∑–ª–æ–º–∞–ª —Å–∏—Å—Ç–µ–º—É! –í–≤–µ–¥–∏ —ç—Ç–∏ —á–∏—Å–ª–∞ –≤ –¥—Ä—É–≥—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É.");
        } else {
            System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ —á–∏—Å–ª–∞! –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
        }
    }

    private static int scrambleNumber(int x, int y, int shift) {
        int step1 = (x * y) << 1;
        int step2 = step1 ^ shift;
        int step3 = step2 % 256;
        return step3;
    }

    private static boolean checkNumbers(int a, int b) {
        return (descrambleNumber(a, 14) == 6 * 7) && (descrambleNumber(b, 18) == 11 * 9);
    }

    private static int descrambleNumber(int number, int shift) {
        int step1 = number % 256;
        int step2 = step1 ^ shift;
        int step3 = step2 >> 1;
        return step3;
    }
}
